name: Terraform Deploy Template

on:
  workflow_call:
    inputs:
      role-to-assume:
        required: true
        type: string
      aws-region:
        required: true
        type: string
      working-directory:
        required: false
        type: string
        default: "."
    secrets:
      TF_GITHUB_PAT:
        required: true
      TF_VAR_OIDC_CLIENT_SECRET:
        required: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      TF_VAR_oidc_client_secret: ${{ secrets.TF_VAR_OIDC_CLIENT_SECRET }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ inputs.role-to-assume }}
          aws-region: ${{ inputs.aws-region }}

      - name: Configure Git credentials for private modules
        env:
          TF_GITHUB_PAT: ${{ secrets.TF_GITHUB_PAT }}
        run: |
          git config --global url."https://${TF_GITHUB_PAT}@github.com/".insteadOf "https://github.com/"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ inputs.working-directory }}

      - name: Terraform Plan
        run: |
          terraform plan -lock=false -detailed-exitcode -out=tfplan || exit_code=$?
          echo "Terraform exited with code: $exit_code"
        working-directory: ${{ inputs.working-directory }}

      # - name: Terraform Apply
      #   env:
      #     TF_VAR_OIDC_CLIENT_SECRET: ${{ secrets.TF_VAR_OIDC_CLIENT_SECRET }}
      #   run: terraform apply -auto-approve
      #   working-directory: ${{ inputs.working-directory }}
